<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>चित्रम् - Artists Management</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #f5f7fa;
            color: #333;
            overflow-x: hidden;
        }

        /* Sidebar styles - same as dashboard */
        .sidebar {
            position: fixed;
            left: -280px;
            top: 0;
            width: 280px;
            height: 100vh;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            z-index: 1000;
            transition: left 0.3s ease;
            overflow-y: auto;
        }

        .sidebar.active {
            left: 0;
        }

        .sidebar-header {
            padding: 2rem 1.5rem;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar-header h2 {
            color: white;
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
        }

        .sidebar-header p {
            color: rgba(255,255,255,0.8);
            font-size: 0.9rem;
        }

        .sidebar-nav {
            padding: 1rem 0;
        }

        .nav-item {
            margin: 0.5rem 0;
        }

        .nav-link {
            display: flex;
            align-items: center;
            padding: 0.75rem 1.5rem;
            color: rgba(255,255,255,0.9);
            text-decoration: none;
            transition: all 0.3s ease;
            border-left: 3px solid transparent;
        }

        .nav-link:hover {
            background: rgba(255,255,255,0.1);
            border-left-color: white;
            color: white;
        }

        .nav-link.active {
            background: rgba(255,255,255,0.15);
            border-left-color: white;
            color: white;
        }

        .nav-icon {
            width: 20px;
            height: 20px;
            margin-right: 0.75rem;
            font-size: 1.2rem;
        }

        /* Main content */
        .main-content {
            margin-left: 0;
            transition: margin-left 0.3s ease;
            min-height: 100vh;
        }

        .header {
            background: white;
            padding: 1rem 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .menu-toggle {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: #333;
            padding: 0.5rem;
        }

        .header-title {
            font-size: 1.5rem;
            color: #333;
            flex: 1;
            text-align: center;
        }

        .logout-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            transition: opacity 0.3s;
            font-size: 0.9rem;
        }

        .logout-btn:hover {
            opacity: 0.9;
        }

        /* Artists content */
        .artists-content {
            padding: 1.5rem;
        }

        .artists-header {
            margin-bottom: 2rem;
        }

        .artists-header h2 {
            color: #333;
            margin-bottom: 0.5rem;
        }

        .artists-stats {
            display: flex;
            gap: 1rem;
            margin-bottom: 1rem;
            flex-wrap: wrap;
        }

        .stat-item {
            background: white;
            padding: 1rem;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            min-width: 120px;
        }

        .add-artist-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1rem;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            min-width: 120px;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 80px;
            position: relative;
            overflow: hidden;
        }

        .add-artist-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 20px rgba(102, 126, 234, 0.4);
        }

        .add-artist-btn:active {
            transform: translateY(0);
        }

        .add-artist-btn .add-icon {
            font-size: 2rem;
            margin-bottom: 0.5rem;
        }

        .add-artist-btn .add-text {
            font-size: 0.9rem;
            font-weight: 600;
            text-align: center;
        }

        .stat-number {
            font-size: 1.5rem;
            font-weight: bold;
            color: #667eea;
        }

        .stat-label {
            font-size: 0.9rem;
            color: #666;
        }

        /* Admin Search Bar Styles */
        .admin-search-container {
            margin: 1.5rem 0;
            padding: 0 0.5rem;
        }

        .admin-search-bar {
            display: flex;
            max-width: 500px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
            transition: box-shadow 0.3s ease;
        }

        .admin-search-bar:focus-within {
            box-shadow: 0 4px 20px rgba(102, 126, 234, 0.3);
        }

        .admin-search-bar input {
            flex: 1;
            padding: 1rem 1.5rem;
            border: none;
            outline: none;
            font-size: 1rem;
            background: transparent;
        }

        .admin-search-bar input::placeholder {
            color: #999;
        }

        .admin-search-button, .admin-clear-button {
            padding: 1rem 1.5rem;
            border: none;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .admin-search-button:hover, .admin-clear-button:hover {
            background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
            transform: translateY(-1px);
        }

        .admin-clear-button {
            background: #6c757d;
            margin-left: 1px;
        }

        .admin-clear-button:hover {
            background: #5a6268;
        }

        .admin-loading-spinner {
            display: inline-block;
            width: 16px;
            height: 16px;
            border: 2px solid #ffffff;
            border-radius: 50%;
            border-top-color: transparent;
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Artists grid */
        .artists-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }

        .artist-card {
            background: white;
            border-radius: 10px;
            padding: 1.5rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .artist-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        }

        .artist-header {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }

        .artist-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
            font-weight: bold;
            margin-right: 1rem;
            overflow: hidden;
            position: relative;
        }

        .artist-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 50%;
            position: absolute;
            top: 0;
            left: 0;
        }

        .artist-avatar .avatar-fallback,
        .artist-avatar .avatar-text {
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 50%;
            position: relative;
            z-index: 1;
        }

        .artist-info h3 {
            color: #333;
            margin-bottom: 0.25rem;
        }

        .artist-details {
            font-size: 0.9rem;
            color: #666;
        }

        .artist-meta {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 0.5rem;
            margin: 1rem 0;
            font-size: 0.85rem;
        }

        .meta-item {
            color: #666;
        }

        .meta-label {
            font-weight: 500;
            color: #333;
        }

        .artist-stats {
            display: flex;
            justify-content: space-between;
            margin: 1rem 0;
            padding: 0.75rem;
            background: #f8f9fa;
            border-radius: 5px;
        }

        .stat {
            text-align: center;
        }

        .stat-value {
            font-weight: bold;
            color: #667eea;
        }

        .stat-text {
            font-size: 0.8rem;
            color: #666;
        }

        .artist-status {
            display: inline-block;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
            margin-bottom: 1rem;
        }

        .status-active {
            background: #d4edda;
            color: #155724;
        }

        .status-inactive {
            background: #fff3cd;
            color: #856404;
        }

        .artist-actions {
            display: flex;
            gap: 0.5rem;
            flex-wrap: wrap;
        }

        .btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: opacity 0.3s;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
        }

        .btn:hover {
            opacity: 0.9;
        }

        .btn-primary {
            background: #667eea;
            color: white;
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-danger {
            background: #dc3545;
            color: white;
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        .btn:disabled:hover {
            opacity: 0.6;
        }

        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 2000;
        }

        .modal.active {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background: white;
            border-radius: 10px;
            padding: 2rem;
            max-width: 600px;
            width: 90%;
            max-height: 90vh;
            overflow-y: auto;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .modal-title {
            color: #333;
            margin: 0;
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: #666;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #333;
        }

        .form-input {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 0.9rem;
        }

        .form-input:focus {
            outline: none;
            border-color: #667eea;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }

        .form-textarea {
            resize: vertical;
            min-height: 80px;
        }

        .modal-actions {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            margin-top: 1.5rem;
        }

        /* Progress Bar */
        .progress-container {
            display: none;
            margin: 1rem 0;
            background: #f0f0f0;
            border-radius: 10px;
            overflow: hidden;
            height: 8px;
            position: relative;
        }

        .progress-container.active {
            display: block;
        }

        .progress-bar {
            height: 100%;
            background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
            width: 0%;
            transition: width 0.3s ease;
            border-radius: 10px;
            position: relative;
            animation: progressShine 2s infinite;
        }

        @keyframes progressShine {
            0% { background-position: -200px 0; }
            100% { background-position: calc(200px + 100%) 0; }
        }

        .progress-bar.animated {
            background: linear-gradient(
                90deg,
                #667eea 0%,
                #764ba2 25%,
                #89f7fe 50%,
                #764ba2 75%,
                #667eea 100%
            );
            background-size: 200px 100%;
            animation: progressShine 1.5s infinite;
        }

        .progress-text {
            text-align: center;
            margin-top: 0.5rem;
            font-size: 0.9rem;
            color: #666;
            font-weight: 500;
        }

        .update-status {
            display: none;
            text-align: center;
            margin: 1rem 0;
            padding: 0.75rem;
            border-radius: 5px;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .update-status.active {
            display: block;
        }

        .update-status.uploading {
            background: #e3f2fd;
            color: #1976d2;
            border: 1px solid #bbdefb;
        }

        .update-status.processing {
            background: #fff3e0;
            color: #f57c00;
            border: 1px solid #ffcc02;
        }

        .update-status.success {
            background: #e8f5e8;
            color: #2e7d32;
            border: 1px solid #c8e6c8;
        }

        /* Loading Spinner */
        .loading-spinner {
            display: inline-block;
            width: 16px;
            height: 16px;
            margin-right: 8px;
            border: 2px solid #f3f3f3;
            border-top: 2px solid #667eea;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Alerts */
        .alert {
            padding: 1rem;
            border-radius: 5px;
            margin-bottom: 1rem;
        }

        .alert-success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .alert-error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .sidebar-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 999;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .sidebar-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        /* Responsive design */
        @media (min-width: 768px) {
            .artists-grid {
                grid-template-columns: repeat(2, 1fr);
            }

            .artists-content {
                padding: 2rem;
            }

            .header-title {
                text-align: left;
            }

            .form-row {
                grid-template-columns: 1fr 1fr;
            }
        }

        @media (min-width: 1024px) {
            .sidebar {
                left: 0;
                position: fixed;
            }

            .main-content {
                margin-left: 280px;
            }

            .menu-toggle {
                display: none;
            }

            .artists-grid {
                grid-template-columns: repeat(3, 1fr);
            }

            .artists-content {
                padding: 2.5rem;
            }
        }

        @media (min-width: 1200px) {
            .artists-grid {
                grid-template-columns: repeat(4, 1fr);
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <h2>चित्रम्</h2>
            <p>Admin Dashboard</p>
        </div>
        <nav class="sidebar-nav">
            <div class="nav-item">
                <a href="/admin/dashboard" class="nav-link">
                    <span class="nav-icon">📊</span>
                    Dashboard
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/artists" class="nav-link active">
                    <span class="nav-icon">👨‍🎨</span>
                    Artists
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/artworks" class="nav-link">
                    <span class="nav-icon">🎨</span>
                    Artworks
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/orders" class="nav-link">
                    <span class="nav-icon">📦</span>
                    Orders
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/messages" class="nav-link">
                    <span class="nav-icon">📧</span>
                    Messages
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/applications" class="nav-link">
                    <span class="nav-icon">📝</span>
                    Applications
                </a>
            </div>
        </nav>
    </div>

    <!-- Sidebar overlay for mobile -->
    <div class="sidebar-overlay" id="sidebarOverlay"></div>

    <!-- Main content -->
    <div class="main-content">
        <!-- Header -->
        <header class="header">
            <button class="menu-toggle" id="menuToggle">☰</button>
            <h1 class="header-title">Artists Management</h1>
            <a href="/admin/logout" class="logout-btn">Logout</a>
        </header>

        <!-- Artists content -->
        <div class="artists-content">
            <!-- Alerts -->
            <% if (error) { %>
                <div class="alert alert-error" id="errorAlert"><%= error %></div>
            <% } %>
            <% if (success) { %>
                <div class="alert alert-success" id="successAlert"><%= success %></div>
            <% } %>

            <!-- Artists header with stats -->
            <div class="artists-header">
                <h2>Artists Management</h2>
                <div class="artists-stats">
                    <div class="stat-item">
                        <div class="stat-number"><%= artists.filter(a => a.status === 'active').length %></div>
                        <div class="stat-label">Active Artists</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number"><%= artists.filter(a => a.status === 'inactive').length %></div>
                        <div class="stat-label">Inactive Artists</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number"><%= artists.length %></div>
                        <div class="stat-label">Total Artists</div>
                    </div>
                    <button class="add-artist-btn" onclick="openAddArtistModal()">
                        <div class="add-icon">➕</div>
                        <div class="add-text">Add New Artist</div>
                    </button>
                </div>
            </div>

            <!-- Search Bar -->
            <div class="admin-search-container">
                <div class="admin-search-bar">
                    <input type="text" 
                           id="adminSearchInput" 
                           placeholder="Search artists by name, email, or bio..." 
                           autocomplete="off">
                    <button type="button" id="adminSearchBtn" class="admin-search-button">
                        <span id="adminSearchIcon">🔍</span>
                        <span id="adminSearchSpinner" class="admin-loading-spinner" style="display: none;"></span>
                    </button>
                    <button type="button" id="adminClearBtn" class="admin-clear-button" style="display: none;">
                        <span>Clear</span>
                    </button>
                </div>
            </div>

            <!-- Artists grid -->
            <div class="artists-grid" id="adminArtistsContainer">
                <% artists.forEach(artist => { %>
                    <div class="artist-card">
                        <div class="artist-header">
                            <div class="artist-avatar">
                                <% if (artist.profile_picture && artist.profile_picture.trim() !== '') { %>
                                    <img src="/uploads/profiles/<%= artist.profile_picture %>" 
                                         alt="<%= artist.full_name %>" 
                                         onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
                                         onload="this.nextElementSibling.style.display='none';">
                                    <div class="avatar-fallback">
                                        <%= artist.full_name.charAt(0).toUpperCase() %>
                                    </div>
                                <% } else { %>
                                    <div class="avatar-text">
                                        <%= artist.full_name.charAt(0).toUpperCase() %>
                                    </div>
                                <% } %>
                            </div>
                            <div class="artist-info">
                                <h3><%= artist.full_name %></h3>
                                <div class="artist-details">
                                    <%= artist.city %>, <%= artist.district %><br>
                                    Age: <%= artist.age %> | Since: <%= artist.started_art_since %>
                                </div>
                            </div>
                        </div>

                        <div class="artist-status status-<%= artist.status %>">
                            <%= artist.status.charAt(0).toUpperCase() + artist.status.slice(1) %>
                        </div>

                        <div class="artist-meta">
                            <div class="meta-item">
                                <span class="meta-label">Email:</span> <%= artist.email %>
                            </div>
                            <div class="meta-item">
                                <span class="meta-label">Phone:</span> <%= artist.phone || 'N/A' %>
                            </div>
                            <div class="meta-item">
                                <span class="meta-label">School:</span> <%= artist.college_school || 'N/A' %>
                            </div>
                            <div class="meta-item">
                                <span class="meta-label">Joined:</span> <%= new Date(artist.joined_at).toLocaleDateString() %>
                            </div>
                        </div>

                        <div class="artist-stats">
                            <div class="stat">
                                <div class="stat-value"><%= artist.arts_uploaded %></div>
                                <div class="stat-text">Arts Uploaded</div>
                            </div>
                            <div class="stat">
                                <div class="stat-value"><%= artist.arts_sold %></div>
                                <div class="stat-text">Arts Sold</div>
                            </div>
                        </div>


                        <div class="artist-actions">
                            <button class="btn btn-primary" 
                                    data-artist-id="<%= artist.unique_id %>" 
                                    onclick="viewProfile(this.dataset.artistId)">
                                👁️ View Profile
                            </button>
                            <button class="btn btn-secondary" 
                                    data-artist-id="<%= artist.unique_id %>" 
                                    onclick="editArtist(this.dataset.artistId)">
                                ✏️ Edit
                            </button>
                            <button class="btn btn-danger" 
                                    data-artist-id="<%= artist.unique_id %>" 
                                    data-artist-name="<%= artist.full_name.replace(/"/g, '&quot;') %>"
                                    onclick="deleteArtist(this.dataset.artistId, this.dataset.artistName)">
                                🗑️ Delete
                            </button>
                        </div>
                    </div>
                <% }); %>
            </div>

            <% if (artists.length === 0) { %>
                <div style="text-align: center; padding: 3rem; color: #666;">
                    <h3>No artists found</h3>
                    <p>There are no artists registered in the system yet.</p>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Edit Artist Modal -->
    <div class="modal" id="editModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Edit Artist</h3>
                <button class="close-btn" onclick="closeEditModal()">&times;</button>
            </div>
            <form id="editForm">
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">Full Name *</label>
                        <input type="text" class="form-input" id="edit_full_name" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Age *</label>
                        <input type="number" class="form-input" id="edit_age" min="1" max="100" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">Started Art Since</label>
                        <input type="text" class="form-input" id="edit_started_art_since" placeholder="e.g., 2020">
                    </div>
                    <div class="form-group">
                        <label class="form-label">Status</label>
                        <select class="form-input" id="edit_status">
                            <option value="active">Active</option>
                            <option value="inactive">Inactive</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="form-label">School/College</label>
                    <input type="text" class="form-input" id="edit_college_school">
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">City</label>
                        <input type="text" class="form-input" id="edit_city">
                    </div>
                    <div class="form-group">
                        <label class="form-label">District</label>
                        <input type="text" class="form-input" id="edit_district">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">Email *</label>
                        <input type="email" class="form-input" id="edit_email" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Phone</label>
                        <input type="tel" class="form-input" id="edit_phone">
                    </div>
                </div>
                <div class="form-group">
                    <label class="form-label">Social Media (JSON format)</label>
                    <textarea class="form-input form-textarea" id="edit_socials" placeholder='{"instagram": "@username", "facebook": "profile"}'></textarea>
                </div>
                <div class="form-group">
                    <label class="form-label">Bio</label>
                    <textarea class="form-input form-textarea" id="edit_bio"></textarea>
                </div>
                <div class="form-group">
                    <label class="form-label">Profile Picture</label>
                    <input type="file" class="form-input" id="edit_profile_picture" accept="image/*" onchange="previewProfilePicture(this)">
                    <small style="color: #666; font-size: 0.8rem;">Current: <span id="current_profile_picture">None</span></small>
                    
                    <!-- Image Preview -->
                    <div id="imagePreview" style="display: none; margin-top: 10px;">
                        <div style="font-size: 0.8rem; color: #666; margin-bottom: 5px;">Preview:</div>
                        <img id="previewImage" style="width: 80px; height: 80px; object-fit: cover; border-radius: 50%; border: 2px solid #ddd;">
                    </div>
                </div>
                
                <!-- Progress Bar -->
                <div class="progress-container" id="updateProgressContainer">
                    <div class="progress-bar" id="updateProgressBar"></div>
                </div>
                <div class="progress-text" id="updateProgressText" style="display: none;"></div>
                
                <!-- Update Status -->
                <div class="update-status" id="updateStatus"></div>
                
                <div class="modal-actions">
                    <button type="button" class="btn btn-secondary" onclick="closeEditModal()" id="cancelBtn">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="updateBtn">
                        <span id="updateBtnText">Update Artist</span>
                        <span id="updateBtnSpinner" style="display: none;">
                            <span class="loading-spinner"></span>Updating...
                        </span>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Add New Artist Modal -->
    <div class="modal" id="addArtistModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Add New Artist</h3>
                <button class="close-btn" onclick="closeAddArtistModal()">&times;</button>
            </div>
            <form id="addArtistForm">
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">Full Name *</label>
                        <input type="text" class="form-input" id="add_full_name" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Age *</label>
                        <input type="number" class="form-input" id="add_age" min="1" max="100" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">Started Art Since</label>
                        <input type="text" class="form-input" id="add_started_art_since" placeholder="e.g., 2020">
                    </div>
                    <div class="form-group">
                        <label class="form-label">Status</label>
                        <select class="form-input" id="add_status">
                            <option value="active">Active</option>
                            <option value="inactive">Inactive</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="form-label">School/College</label>
                    <input type="text" class="form-input" id="add_college_school">
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">City</label>
                        <input type="text" class="form-input" id="add_city">
                    </div>
                    <div class="form-group">
                        <label class="form-label">District</label>
                        <input type="text" class="form-input" id="add_district">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">Email *</label>
                        <input type="email" class="form-input" id="add_email" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Phone</label>
                        <input type="tel" class="form-input" id="add_phone">
                    </div>
                </div>
                <div class="form-group">
                    <label class="form-label">Social Media (JSON format)</label>
                    <textarea class="form-input form-textarea" id="add_socials" placeholder='{"instagram": "@username", "facebook": "profile"}'></textarea>
                </div>
                <div class="form-group">
                    <label class="form-label">Bio</label>
                    <textarea class="form-input form-textarea" id="add_bio"></textarea>
                </div>
                <div class="form-group">
                    <label class="form-label">Profile Picture</label>
                    <input type="file" class="form-input" id="add_profile_picture" accept="image/*" onchange="previewAddProfilePicture(this)">
                    
                    <!-- Image Preview -->
                    <div id="addImagePreview" style="display: none; margin-top: 10px;">
                        <div style="font-size: 0.8rem; color: #666; margin-bottom: 5px;">Preview:</div>
                        <img id="addPreviewImage" style="width: 80px; height: 80px; object-fit: cover; border-radius: 50%; border: 2px solid #ddd;">
                    </div>
                </div>
                
                <!-- Progress Bar -->
                <div class="progress-container" id="addProgressContainer">
                    <div class="progress-bar" id="addProgressBar"></div>
                </div>
                <div class="progress-text" id="addProgressText" style="display: none;"></div>
                
                <!-- Add Status -->
                <div class="update-status" id="addStatus"></div>
                
                <div class="modal-actions">
                    <button type="button" class="btn btn-secondary" onclick="closeAddArtistModal()" id="addCancelBtn">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="addArtistBtn">
                        <span id="addBtnText">Create Artist</span>
                        <span id="addBtnSpinner" style="display: none;">
                            <span class="loading-spinner"></span>Creating...
                        </span>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Sidebar functionality
        const menuToggle = document.getElementById('menuToggle');
        const sidebar = document.getElementById('sidebar');
        const sidebarOverlay = document.getElementById('sidebarOverlay');

        menuToggle.addEventListener('click', function() {
            sidebar.classList.toggle('active');
            sidebarOverlay.classList.toggle('active');
        });

        sidebarOverlay.addEventListener('click', function() {
            sidebar.classList.remove('active');
            sidebarOverlay.classList.remove('active');
        });

        // Close sidebar when clicking nav links on mobile
        const navLinks = document.querySelectorAll('.nav-link');
        navLinks.forEach(link => {
            link.addEventListener('click', function() {
                if (window.innerWidth < 1024) {
                    sidebar.classList.remove('active');
                    sidebarOverlay.classList.remove('active');
                }
            });
        });

        // Handle window resize
        window.addEventListener('resize', function() {
            if (window.innerWidth >= 1024) {
                sidebar.classList.remove('active');
                sidebarOverlay.classList.remove('active');
            }
        });

        // Artist management functions
        function viewProfile(artistId) {
            // Redirect to artist profile page
            window.location.href = `/artist/${artistId}`;
        }

        function editArtist(artistId) {
            // Fetch artist data and populate edit modal
            fetch(`/admin/artists/${artistId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.artist) {
                        const artist = data.artist;
                        document.getElementById('edit_full_name').value = artist.full_name;
                        document.getElementById('edit_age').value = artist.age;
                        document.getElementById('edit_started_art_since').value = artist.started_art_since || '';
                        document.getElementById('edit_status').value = artist.status;
                        document.getElementById('edit_college_school').value = artist.college_school || '';
                        document.getElementById('edit_city').value = artist.city || '';
                        document.getElementById('edit_district').value = artist.district || '';
                        document.getElementById('edit_email').value = artist.email;
                        document.getElementById('edit_phone').value = artist.phone || '';
                        document.getElementById('edit_socials').value = artist.socials || '';
                        document.getElementById('edit_bio').value = artist.bio || '';
                        document.getElementById('current_profile_picture').textContent = artist.profile_picture || 'None';
                        
                        document.getElementById('editForm').dataset.artistId = artistId;
                        document.getElementById('editModal').classList.add('active');
                    }
                })
                .catch(error => {
                    console.error('Error fetching artist:', error);
                    showAlert('Error loading artist data', 'error');
                });
        }

        function closeEditModal() {
            document.getElementById('editModal').classList.remove('active');
            hideUpdateProgress(); // Reset progress bar when closing modal
        }

        // Handle edit form submission
        document.getElementById('editForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const artistId = this.dataset.artistId;
            
            // Show progress bar and disable form
            showUpdateProgress();
            
            // Create FormData object to handle file upload
            const formData = new FormData();
            formData.append('full_name', document.getElementById('edit_full_name').value);
            formData.append('age', document.getElementById('edit_age').value);
            formData.append('started_art_since', document.getElementById('edit_started_art_since').value);
            formData.append('status', document.getElementById('edit_status').value);
            formData.append('college_school', document.getElementById('edit_college_school').value);
            formData.append('city', document.getElementById('edit_city').value);
            formData.append('district', document.getElementById('edit_district').value);
            formData.append('email', document.getElementById('edit_email').value);
            formData.append('phone', document.getElementById('edit_phone').value);
            formData.append('socials', document.getElementById('edit_socials').value);
            formData.append('bio', document.getElementById('edit_bio').value);
            
            // Add profile picture file if selected
            const profilePictureFile = document.getElementById('edit_profile_picture').files[0];
            if (profilePictureFile) {
                formData.append('profile_picture', profilePictureFile);
                updateProgressStatus('uploading', 'Uploading profile picture...');
            } else {
                updateProgressStatus('processing', 'Updating artist information...');
            }

            // Simulate progress steps
            updateProgress(20);
            
            setTimeout(() => {
                updateProgress(50);
                
                fetch(`/admin/artists/${artistId}`, {
                    method: 'PUT',
                    body: formData // Don't set Content-Type header, let browser set it for FormData
                })
                .then(response => {
                    updateProgress(80);
                    return response.json();
                })
                .then(data => {
                    updateProgress(100);
                    updateProgressStatus('success', 'Artist updated successfully!');
                    
                    setTimeout(() => {
                        if (data.success) {
                            showAlert(data.success, 'success');
                            closeEditModal();
                            setTimeout(() => {
                                window.location.reload();
                            }, 1000);
                        } else {
                            hideUpdateProgress();
                            showAlert(data.error || 'Error updating artist', 'error');
                        }
                    }, 500);
                })
                .catch(error => {
                    console.error('Error updating artist:', error);
                    hideUpdateProgress();
                    showAlert('Error updating artist', 'error');
                });
            }, 300);
        });

        // Progress bar functions
        function showUpdateProgress() {
            document.getElementById('updateProgressContainer').classList.add('active');
            document.getElementById('updateProgressText').style.display = 'block';
            document.getElementById('updateBtnText').style.display = 'none';
            document.getElementById('updateBtnSpinner').style.display = 'inline';
            document.getElementById('updateBtn').disabled = true;
            document.getElementById('cancelBtn').disabled = true;
            
            // Disable all form inputs
            const formInputs = document.querySelectorAll('#editForm input, #editForm select, #editForm textarea');
            formInputs.forEach(input => input.disabled = true);
        }

        function hideUpdateProgress() {
            document.getElementById('updateProgressContainer').classList.remove('active');
            document.getElementById('updateProgressText').style.display = 'none';
            document.getElementById('updateStatus').classList.remove('active');
            document.getElementById('updateBtnText').style.display = 'inline';
            document.getElementById('updateBtnSpinner').style.display = 'none';
            document.getElementById('updateBtn').disabled = false;
            document.getElementById('cancelBtn').disabled = false;
            
            // Re-enable all form inputs
            const formInputs = document.querySelectorAll('#editForm input, #editForm select, #editForm textarea');
            formInputs.forEach(input => input.disabled = false);
            
            // Reset progress
            updateProgress(0);
        }

        function updateProgress(percentage) {
            const progressBar = document.getElementById('updateProgressBar');
            const progressText = document.getElementById('updateProgressText');
            
            progressBar.style.width = percentage + '%';
            progressText.textContent = `${percentage}% Complete`;
            
            if (percentage > 0) {
                progressBar.classList.add('animated');
            } else {
                progressBar.classList.remove('animated');
            }
        }

        function updateProgressStatus(type, message) {
            const statusElement = document.getElementById('updateStatus');
            statusElement.className = `update-status active ${type}`;
            statusElement.innerHTML = type === 'uploading' || type === 'processing' 
                ? `<span class="loading-spinner"></span>${message}`
                : message;
        }

        // Add New Artist Functions
        function openAddArtistModal() {
            document.getElementById('addArtistModal').classList.add('active');
            // Clear form
            document.getElementById('addArtistForm').reset();
            document.getElementById('addImagePreview').style.display = 'none';
            hideAddProgress();
        }

        function closeAddArtistModal() {
            document.getElementById('addArtistModal').classList.remove('active');
            hideAddProgress();
        }

        function previewAddProfilePicture(input) {
            const preview = document.getElementById('addImagePreview');
            const previewImage = document.getElementById('addPreviewImage');
            
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                
                reader.onload = function(e) {
                    previewImage.src = e.target.result;
                    preview.style.display = 'block';
                };
                
                reader.readAsDataURL(input.files[0]);
            } else {
                preview.style.display = 'none';
            }
        }

        // Handle add artist form submission
        document.getElementById('addArtistForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Show progress bar and disable form
            showAddProgress();
            
            // Create FormData object to handle file upload
            const formData = new FormData();
            formData.append('full_name', document.getElementById('add_full_name').value);
            formData.append('age', document.getElementById('add_age').value);
            formData.append('started_art_since', document.getElementById('add_started_art_since').value);
            formData.append('status', document.getElementById('add_status').value);
            formData.append('college_school', document.getElementById('add_college_school').value);
            formData.append('city', document.getElementById('add_city').value);
            formData.append('district', document.getElementById('add_district').value);
            formData.append('email', document.getElementById('add_email').value);
            formData.append('phone', document.getElementById('add_phone').value);
            formData.append('socials', document.getElementById('add_socials').value);
            formData.append('bio', document.getElementById('add_bio').value);
            
            // Add profile picture file if selected
            const profilePictureFile = document.getElementById('add_profile_picture').files[0];
            if (profilePictureFile) {
                formData.append('profile_picture', profilePictureFile);
                updateAddProgressStatus('uploading', 'Uploading profile picture...');
            } else {
                updateAddProgressStatus('processing', 'Creating new artist...');
            }

            // Simulate progress steps
            updateAddProgress(20);
            
            setTimeout(() => {
                updateAddProgress(50);
                
                fetch('/admin/artists', {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                    updateAddProgress(80);
                    return response.json();
                })
                .then(data => {
                    updateAddProgress(100);
                    updateAddProgressStatus('success', 'Artist created successfully!');
                    
                    setTimeout(() => {
                        if (data.success) {
                            showAlert(data.success, 'success');
                            closeAddArtistModal();
                            setTimeout(() => {
                                window.location.reload();
                            }, 1000);
                        } else {
                            hideAddProgress();
                            showAlert(data.error || 'Error creating artist', 'error');
                        }
                    }, 500);
                })
                .catch(error => {
                    console.error('Error creating artist:', error);
                    hideAddProgress();
                    showAlert('Error creating artist', 'error');
                });
            }, 300);
        });

        // Add Progress bar functions
        function showAddProgress() {
            document.getElementById('addProgressContainer').classList.add('active');
            document.getElementById('addProgressText').style.display = 'block';
            document.getElementById('addBtnText').style.display = 'none';
            document.getElementById('addBtnSpinner').style.display = 'inline';
            document.getElementById('addArtistBtn').disabled = true;
            document.getElementById('addCancelBtn').disabled = true;
            
            // Disable all form inputs
            const formInputs = document.querySelectorAll('#addArtistForm input, #addArtistForm select, #addArtistForm textarea');
            formInputs.forEach(input => input.disabled = true);
        }

        function hideAddProgress() {
            document.getElementById('addProgressContainer').classList.remove('active');
            document.getElementById('addProgressText').style.display = 'none';
            document.getElementById('addStatus').classList.remove('active');
            document.getElementById('addBtnText').style.display = 'inline';
            document.getElementById('addBtnSpinner').style.display = 'none';
            document.getElementById('addArtistBtn').disabled = false;
            document.getElementById('addCancelBtn').disabled = false;
            
            // Re-enable all form inputs
            const formInputs = document.querySelectorAll('#addArtistForm input, #addArtistForm select, #addArtistForm textarea');
            formInputs.forEach(input => input.disabled = false);
            
            // Reset progress
            updateAddProgress(0);
        }

        function updateAddProgress(percentage) {
            const progressBar = document.getElementById('addProgressBar');
            const progressText = document.getElementById('addProgressText');
            
            progressBar.style.width = percentage + '%';
            progressText.textContent = `${percentage}% Complete`;
            
            if (percentage > 0) {
                progressBar.classList.add('animated');
            } else {
                progressBar.classList.remove('animated');
            }
        }

        function updateAddProgressStatus(type, message) {
            const statusElement = document.getElementById('addStatus');
            statusElement.className = `update-status active ${type}`;
            statusElement.innerHTML = type === 'uploading' || type === 'processing' 
                ? `<span class="loading-spinner"></span>${message}`
                : message;
        }

        function deleteArtist(artistId, artistName) {
            if (confirm(`Are you sure you want to delete artist "${artistName}"?`)) {
                if (confirm(`This action cannot be undone. The artist "${artistName}" will be permanently removed from the active list. Continue?`)) {
                    fetch(`/admin/artists/${artistId}`, {
                        method: 'DELETE'
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            showAlert(data.success, 'success');
                            setTimeout(() => {
                                window.location.reload();
                            }, 1500);
                        } else {
                            showAlert(data.error || 'Error deleting artist', 'error');
                        }
                    })
                    .catch(error => {
                        console.error('Error deleting artist:', error);
                        showAlert('Error deleting artist', 'error');
                    });
                }
            }
        }

        // Preview profile picture before upload
        function previewProfilePicture(input) {
            const preview = document.getElementById('imagePreview');
            const previewImage = document.getElementById('previewImage');
            
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                
                reader.onload = function(e) {
                    previewImage.src = e.target.result;
                    preview.style.display = 'block';
                };
                
                reader.readAsDataURL(input.files[0]);
            } else {
                preview.style.display = 'none';
            }
        }

        function showAlert(message, type) {
            // Remove existing alerts
            const existingAlerts = document.querySelectorAll('.alert');
            existingAlerts.forEach(alert => alert.remove());

            // Create new alert
            const alert = document.createElement('div');
            alert.className = `alert alert-${type}`;
            alert.textContent = message;
            
            // Insert at the top of content
            const content = document.querySelector('.artists-content');
            content.insertBefore(alert, content.firstChild);

            // Auto remove after 5 seconds
            setTimeout(() => {
                alert.remove();
            }, 5000);
        }

        // Auto-hide alerts after 5 seconds
        setTimeout(() => {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                alert.style.opacity = '0';
                setTimeout(() => alert.remove(), 300);
            });
        }, 5000);
    </script>
</body>
</html>

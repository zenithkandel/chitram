<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡§ö‡§ø‡§§‡•ç‡§∞‡§Æ‡•ç - Orders Management</title>
    <link rel="stylesheet" href="/css/pages/admin-common.css">
    <link rel="stylesheet" href="/css/pages/admin-orders.css">
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <h2>‡§ö‡§ø‡§§‡•ç‡§∞‡§Æ‡•ç</h2>
            <p>Art Management System</p>
        </div>
        <nav class="sidebar-nav">
            <div class="nav-item">
                <a href="/admin/dashboard" class="nav-link">
                    <span class="nav-icon">üìä</span>
                    Dashboard
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/artists" class="nav-link">
                    <span class="nav-icon">üë®‚Äçüé®</span>
                    Artists
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/artworks" class="nav-link">
                    <span class="nav-icon">üé®</span>
                    Artworks
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/orders" class="nav-link active">
                    <span class="nav-icon">üì¶</span>
                    Orders
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/messages" class="nav-link">
                    <span class="nav-icon">üìß</span>
                    Messages
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/applications" class="nav-link">
                    <span class="nav-icon">üìù</span>
                    Applications
                </a>
            </div>
        </nav>
    </div>

    <!-- Overlay for mobile -->
    <div class="sidebar-overlay" id="sidebarOverlay"></div>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Header -->
        <header class="header">
            <button class="menu-toggle" id="menuToggle">‚ò∞</button>
            <h1 class="header-title">üì¶ Orders Management</h1>
            <a href="/admin/logout" class="logout-btn">Logout</a>
        </header>

        <!-- Orders Content -->
        <div class="orders-content">
            <% if (error) { %>
                <div class="alert error" id="errorAlert">
                    <%= error %>
                </div>
            <% } %>

            <% if (success) { %>
                <div class="alert success" id="successAlert">
                    <%= success %>
                </div>
            <% } %>

            <!-- Orders Stats -->
            <div class="artists-stats-section">
                <div class="stats-header">
                    <h2 class="stats-title">Orders Overview</h2>
                </div>

                <div class="artists-stats">
                    <div class="stat-card">
                        <div class="stat-number"><%= orders.filter(o => o.status === 'placed').length %></div>
                        <div class="stat-label">New Orders</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number"><%= orders.filter(o => o.status === 'seen' || o.status === 'contacted').length %></div>
                        <div class="stat-label">Processing Orders</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number"><%= orders.filter(o => o.status === 'delivered').length %></div>
                        <div class="stat-label">Delivered Orders</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number"><%= orders.length %></div>
                        <div class="stat-label">Total Orders</div>
                    </div>
                </div>
            </div>

            <!-- Orders Grid -->
            <div class="orders-container">
                <div class="orders-grid">
                    <% if (orders.length === 0) { %>
                        <div class="order-card empty-state">
                            <h3>No orders found</h3>
                            <p class="muted-2">Orders will appear here when customers place them.</p>
                        </div>
                    <% } else { %>
                        <% orders.forEach(order => { %>
                            <div class="order-card" data-id="<%= order.unique_id %>">
                                <div class="order-header">
                                    <div>
                                        <div class="order-id">#<%= order.order_id %></div>
                                        <div class="order-date"><%= new Date(order.creation_date_time).toLocaleDateString() %></div>
                                    </div>
                                    <span class="status-badge status-<%= order.status %>"><%= order.status %></span>
                                </div>
                                
                                <div class="order-info">
                                    <h3><%= order.customer_name %></h3>
                                    
                                    <div class="order-details">
                                        <div class="detail-item">
                                            <span class="detail-label">Email</span>
                                            <span class="detail-value"><%= order.customer_email %></span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label">Phone</span>
                                            <span class="detail-value"><%= order.customer_phone %></span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label">Total Amount</span>
                                            <span class="detail-value">Rs. <%= Number(order.total_amount).toLocaleString() %></span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label">Items</span>
                                            <span class="detail-value"><%= order.item_count %> item<%= order.item_count > 1 ? 's' : '' %></span>
                                        </div>
                                    </div>
                                    
                                    <% if (order.customer_message) { %>
                                        <p style="margin: 0.75rem 0; color: #666; font-size: 0.85rem; line-height: 1.4;">
                                            <strong>Message:</strong> <%= order.customer_message.substring(0, 100) %><%= order.customer_message.length > 100 ? '...' : '' %>
                                        </p>
                                    <% } %>
                                </div>

                                <div class="order-actions">
                                    <button class="btn btn-view" onclick="viewOrder('<%= order.unique_id %>')">
                                        üëÅÔ∏è View Details
                                    </button>
                                    <button class="btn btn-delete" onclick="deleteOrder('<%= order.unique_id %>', '<%= order.order_id %>')">
                                        üóëÔ∏è Delete
                                    </button>
                                </div>
                            </div>
                        <% }); %>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <!-- View Order Modal -->
    <div id="viewOrderModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Order Details</h2>
                <button class="close-btn" onclick="closeViewOrderModal()">&times;</button>
            </div>
            
            <div id="orderDetailsContent">
                <!-- Order details will be loaded here -->
            </div>

            <div class="status-update-section">
                <h3 class="section-title">Update Status</h3>
                <select id="statusSelect" class="status-select">
                    <option value="placed">Placed</option>
                    <option value="seen">Seen</option>
                    <option value="contacted">Contacted</option>
                    <option value="sold">Sold</option>
                    <option value="delivered">Delivered</option>
                    <option value="canceled">Canceled</option>
                </select>
                <button onclick="updateOrderStatus()" class="update-status-btn">Update Status</button>
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let currentOrderId = null;

        // View order function
        async function viewOrder(orderId) {
            currentOrderId = orderId;
            
            try {
                const response = await fetch(`/admin/orders/${orderId}`);
                const data = await response.json();
                
                if (data.order) {
                    const order = data.order;
                    
                    // Set current status in select
                    document.getElementById('statusSelect').value = order.status;
                    
                    // Build order details HTML
                    let itemsHtml = '';
                    if (order.item_list && order.item_list.length > 0) {
                        itemsHtml = order.item_list.map(item => 
                            `<div class="item">
                                <strong><a href="/artwork/${item.art_id}">${item.art_name || 'Unknown Item'}</a></strong><br>
                                <small>Price: Rs. ${Number(item.price || 0).toLocaleString()}</small>
                            </div>`
                        ).join('');
                    } else {
                        itemsHtml = '<div class="item">No items found</div>';
                    }
                    
                    const detailsHtml = `
                        <div class="order-detail-section">
                            <h3 class="section-title">Customer Information</h3>
                            <div class="order-details">
                                <div class="detail-item">
                                    <span class="detail-label">Order ID</span>
                                    <span class="detail-value">#${order.order_id}</span>
                                </div>
                                <div class="detail-item">
                                    <span class="detail-label">Customer Name</span>
                                    <span class="detail-value">${order.customer_name}</span>
                                </div>
                                <div class="detail-item">
                                    <span class="detail-label">Email</span>
                                    <span class="detail-value">${order.customer_email}</span>
                                </div>
                                <div class="detail-item">
                                    <span class="detail-label">Phone</span>
                                    <span class="detail-value">${order.customer_phone}</span>
                                </div>
                                <div class="detail-item">
                                    <span class="detail-label">Total Amount</span>
                                    <span class="detail-value">Rs. ${Number(order.total_amount).toLocaleString()}</span>
                                </div>
                                <div class="detail-item">
                                    <span class="detail-label">Status</span>
                                    <span class="status-badge status-${order.status}">${order.status}</span>
                                </div>
                            </div>
                        </div>

                        <div class="order-detail-section">
                            <h3 class="section-title">Shipping Address</h3>
                            <p>${order.shipping_address}</p>
                        </div>

                        ${order.customer_message ? `
                        <div class="order-detail-section">
                            <h3 class="section-title">Customer Message</h3>
                            <p>${order.customer_message}</p>
                        </div>
                        ` : ''}

                        <div class="order-detail-section">
                            <h3 class="section-title">Order Items</h3>
                            <div class="item-list">
                                ${itemsHtml}
                            </div>
                        </div>

                        <div class="order-detail-section">
                            <h3 class="section-title">Order Timeline</h3>
                            <div class="order-details">
                                <div class="detail-item">
                                    <span class="detail-label">Order Placed</span>
                                    <span class="detail-value">${new Date(order.creation_date_time).toLocaleString()}</span>
                                </div>
                                ${order.received_date_time ? `
                                <div class="detail-item">
                                    <span class="detail-label">Order Seen</span>
                                    <span class="detail-value">${new Date(order.received_date_time).toLocaleString()}</span>
                                </div>
                                ` : ''}
                                ${order.delivered_date_time ? `
                                <div class="detail-item">
                                    <span class="detail-label">Order Delivered</span>
                                    <span class="detail-value">${new Date(order.delivered_date_time).toLocaleString()}</span>
                                </div>
                                ` : ''}
                            </div>
                        </div>
                    `;
                    
                    document.getElementById('orderDetailsContent').innerHTML = detailsHtml;
                    document.getElementById('viewOrderModal').classList.add('active');
                } else {
                    showAlert('Error loading order data', 'error');
                }
            } catch (error) {
                console.error('Error fetching order:', error);
                showAlert('Error loading order data', 'error');
            }
        }

        function closeViewOrderModal() {
            document.getElementById('viewOrderModal').classList.remove('active');
            currentOrderId = null;
        }

        // Update order status
        async function updateOrderStatus() {
            if (!currentOrderId) {
                showAlert('No order selected', 'error');
                return;
            }

            const status = document.getElementById('statusSelect').value;

            try {
                const response = await fetch(`/admin/orders/${currentOrderId}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ status })
                });

                const data = await response.json();

                if (data.success) {
                    showAlert(data.success, 'success');
                    closeViewOrderModal();
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showAlert(data.error || 'Error updating order status', 'error');
                }
            } catch (error) {
                console.error('Error updating order status:', error);
                showAlert('Error updating order status', 'error');
            }
        }

        function deleteOrder(orderId, orderIdDisplay) {
            if (confirm(`Are you sure you want to delete order "${orderIdDisplay}"? This action cannot be undone.`)) {
                fetch(`/admin/orders/${orderId}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showAlert(data.success, 'success');
                        // Remove the order card from DOM
                        const orderCard = document.querySelector(`[data-id="${orderId}"]`);
                        if (orderCard) {
                            orderCard.style.transition = 'all 0.3s ease';
                            orderCard.style.opacity = '0';
                            orderCard.style.transform = 'scale(0.8)';
                            setTimeout(() => {
                                orderCard.remove();
                                // Reload to update stats
                                setTimeout(() => window.location.reload(), 1000);
                            }, 300);
                        }
                    } else {
                        showAlert(data.error || 'Error deleting order', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error deleting order:', error);
                    showAlert('Error deleting order', 'error');
                });
            }
        }

        function showAlert(message, type) {
            // Remove existing alerts
            const existingAlerts = document.querySelectorAll('.alert');
            existingAlerts.forEach(alert => alert.remove());
            
            // Create new alert
            const alert = document.createElement('div');
            alert.className = `alert ${type}`;
            alert.textContent = message;
            
            // Insert after header
            const ordersContent = document.querySelector('.orders-content');
            ordersContent.insertBefore(alert, ordersContent.firstChild);
            
            // Auto-hide after 5 seconds
            setTimeout(() => {
                if (alert.parentNode) {
                    alert.style.opacity = '0';
                    alert.style.transform = 'translateY(-10px)';
                    setTimeout(() => alert.remove(), 300);
                }
            }, 5000);
        }

        // Close modals when clicking outside
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal')) {
                if (e.target.id === 'viewOrderModal') {
                    closeViewOrderModal();
                }
            }
        });

        // Close modals with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeViewOrderModal();
            }
        });

        // Sidebar toggle functionality
        const menuToggle = document.getElementById('menuToggle');
        const sidebar = document.getElementById('sidebar');
        const sidebarOverlay = document.getElementById('sidebarOverlay');

        menuToggle.addEventListener('click', function() {
            sidebar.classList.toggle('active');
            sidebarOverlay.classList.toggle('active');
        });

        sidebarOverlay.addEventListener('click', function() {
            sidebar.classList.remove('active');
            sidebarOverlay.classList.remove('active');
        });

        // Auto-hide alerts
        setTimeout(() => {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                if (alert) {
                    alert.style.opacity = '0';
                    alert.style.transform = 'translateY(-10px)';
                    setTimeout(() => alert.remove(), 300);
                }
            });
        }, 5000);
    </script>
</body>
</html>

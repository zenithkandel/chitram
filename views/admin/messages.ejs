<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>चित्रम् - Messages Management</title>
    <link rel="stylesheet" href="/css/pages/admin-common.css">
    <link rel="stylesheet" href="/css/pages/admin-messages.css">
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <h2>चित्रम्</h2>
            <p>Art Management System</p>
        </div>
        <nav class="sidebar-nav">
            <div class="nav-item">
                <a href="/admin/dashboard" class="nav-link">
                    <span class="nav-icon">📊</span>
                    Dashboard
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/artists" class="nav-link">
                    <span class="nav-icon">👨‍🎨</span>
                    Artists
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/artworks" class="nav-link">
                    <span class="nav-icon">🎨</span>
                    Artworks
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/orders" class="nav-link">
                    <span class="nav-icon">📦</span>
                    Orders
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/messages" class="nav-link active">
                    <span class="nav-icon">📧</span>
                    Messages
                </a>
            </div>
            <div class="nav-item">
                <a href="/admin/applications" class="nav-link">
                    <span class="nav-icon">📝</span>
                    Applications
                </a>
            </div>
        </nav>
    </div>

    <!-- Overlay for mobile -->
    <div class="sidebar-overlay" id="sidebarOverlay"></div>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Header -->
        <header class="header">
            <button class="menu-toggle" id="menuToggle">☰</button>
            <h1 class="header-title">📧 Messages Management</h1>
            <a href="/admin/logout" class="logout-btn">Logout</a>
        </header>

        <!-- Messages Content -->
        <div class="messages-content">
            <% if (error) { %>
                <div class="alert error" id="errorAlert">
                    <%= error %>
                </div>
            <% } %>

            <% if (success) { %>
                <div class="alert success" id="successAlert">
                    <%= success %>
                </div>
            <% } %>

            <!-- Messages Stats -->
            <div class="artists-stats-section">
                <div class="stats-header">
                    <h2 class="stats-title">
                        <% if (pageType === 'archive') { %>
                            📁 Archive - Messages Overview
                        <% } else { %>
                            📧 Inbox - Messages Overview
                        <% } %>
                    </h2>
                    <div class="btn-group">
                        <a href="/admin/messages" class="btn <%= pageType === 'inbox' ? 'btn-view' : 'btn-archive' %>">
                            📧 Inbox
                        </a>
                        <a href="/admin/messages/archive" class="btn <%= pageType === 'archive' ? 'btn-view' : 'btn-archive' %>">
                            📁 Archive
                        </a>
                    </div>
                </div>

                <% if (pageType === 'archive') { %>
                    <div class="artists-stats">
                        <div class="stat-card">
                            <div class="stat-number"><%= messages.length %></div>
                            <div class="stat-label">Archived Messages</div>
                        </div>
                    </div>
                <% } else { %>
                    <div class="artists-stats">
                        <div class="stat-card">
                            <div class="stat-number"><%= messages.filter(m => m.status === 'unread').length %></div>
                            <div class="stat-label">Unread Messages</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number"><%= messages.filter(m => m.status === 'read').length %></div>
                            <div class="stat-label">Read Messages</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number"><%= messages.length %></div>
                            <div class="stat-label">Total Messages</div>
                        </div>
                    </div>
                <% } %>
            </div>

            <!-- Messages Grid -->
            <div class="messages-container">
                <div class="messages-grid">
                    <% if (messages.length === 0) { %>
            <div class="message-card empty-state">
                            <% if (pageType === 'archive') { %>
                <h3>No archived messages</h3>
                <p class="muted-2">Archived messages will appear here when you move messages to archive.</p>
                            <% } else { %>
                <h3>No messages found</h3>
                <p class="muted-2">Contact messages will appear here when visitors submit the contact form.</p>
                            <% } %>
                        </div>
                    <% } else { %>
                        <% messages.forEach(message => { %>
                            <div class="message-card" data-id="<%= message.unique_id %>">
                                <div class="message-header">
                                    <div>
                                        <div class="message-sender"><%= message.full_name %></div>
                                        <div class="message-date"><%= new Date(message.created_at).toLocaleDateString() %></div>
                                    </div>
                                    <span class="status-badge status-<%= message.status %>"><%= message.status %></span>
                                </div>
                                
                                <div class="message-info">
                                    <h3><%= message.subject %></h3>
                                    
                                    <div class="message-details">
                                        <div class="detail-item">
                                            <span class="detail-label">Email</span>
                                            <span class="detail-value"><%= message.email %></span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label">Phone</span>
                                            <span class="detail-value"><%= message.phone || 'Not provided' %></span>
                                        </div>
                                    </div>
                                    
                                    <div class="message-preview">
                                        <%= message.message.substring(0, 150) %><%= message.message.length > 150 ? '...' : '' %>
                                    </div>
                                </div>

                                <div class="message-actions">
                                    <button class="btn btn-view" onclick="viewMessage('<%= message.unique_id %>')">
                                        👁️ View Message
                                    </button>
                                    <button class="btn btn-delete" onclick="deleteMessage('<%= message.unique_id %>', '<%= message.full_name %>')">
                                        🗑️ Delete
                                    </button>
                                </div>
                            </div>
                        <% }); %>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <!-- View Message Modal -->
    <div id="viewMessageModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Message Details</h2>
                <button class="close-btn" onclick="closeViewMessageModal()">&times;</button>
            </div>
            
            <div id="messageDetailsContent">
                <!-- Message details will be loaded here -->
            </div>

            <div class="status-update-section">
                <h3 class="section-title">Update Status</h3>
                <select id="statusSelect" class="status-select">
                    <option value="unread">Unread</option>
                    <option value="read">Read</option>
                    <option value="archived">Archived</option>
                </select>
                <button onclick="updateMessageStatus()" class="update-status-btn">Update Status</button>
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let currentMessageId = null;

        // View message function
        async function viewMessage(messageId) {
            currentMessageId = messageId;
            
            try {
                const response = await fetch(`/admin/messages/${messageId}`);
                const data = await response.json();
                
                if (data.message) {
                    const message = data.message;
                    
                    // Set current status in select
                    document.getElementById('statusSelect').value = message.status;
                    
                    // Build message details HTML
                    const detailsHtml = `
                        <div class="message-detail-section">
                            <h3 class="section-title">Contact Information</h3>
                            <div class="message-details">
                                <div class="detail-item">
                                    <span class="detail-label">Full Name</span>
                                    <span class="detail-value">${message.full_name}</span>
                                </div>
                                <div class="detail-item">
                                    <span class="detail-label">Email Address</span>
                                    <span class="detail-value">${message.email}</span>
                                </div>
                                <div class="detail-item">
                                    <span class="detail-label">Phone Number</span>
                                    <span class="detail-value">${message.phone || 'Not provided'}</span>
                                </div>
                                <div class="detail-item">
                                    <span class="detail-label">Status</span>
                                    <span class="status-badge status-${message.status}">${message.status}</span>
                                </div>
                            </div>
                        </div>

                        <div class="message-detail-section">
                            <h3 class="section-title">Subject</h3>
                            <p class="subject-text">${message.subject}</p>
                        </div>

                        <div class="message-detail-section">
                            <h3 class="section-title">Message Content</h3>
                            <div class="message-content">
                                ${message.message.replace(/\n/g, '<br>')}
                            </div>
                        </div>

                        <div class="message-detail-section">
                            <h3 class="section-title">Message Timeline</h3>
                            <div class="message-details">
                                <div class="detail-item">
                                    <span class="detail-label">Received</span>
                                    <span class="detail-value">${new Date(message.created_at).toLocaleString()}</span>
                                </div>
                                ${message.updated_at && message.updated_at !== message.created_at ? `
                                <div class="detail-item">
                                    <span class="detail-label">Last Updated</span>
                                    <span class="detail-value">${new Date(message.updated_at).toLocaleString()}</span>
                                </div>
                                ` : ''}
                            </div>
                        </div>
                    `;
                    
                    document.getElementById('messageDetailsContent').innerHTML = detailsHtml;
                    document.getElementById('viewMessageModal').classList.add('active');
                } else {
                    showAlert('Error loading message data', 'error');
                }
            } catch (error) {
                console.error('Error fetching message:', error);
                showAlert('Error loading message data', 'error');
            }
        }

        function closeViewMessageModal() {
            document.getElementById('viewMessageModal').classList.remove('active');
            currentMessageId = null;
        }

        // Update message status
        async function updateMessageStatus() {
            if (!currentMessageId) {
                showAlert('No message selected', 'error');
                return;
            }

            const status = document.getElementById('statusSelect').value;

            try {
                const response = await fetch(`/admin/messages/${currentMessageId}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ status })
                });

                const data = await response.json();

                if (data.success) {
                    showAlert(data.success, 'success');
                    closeViewMessageModal();
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showAlert(data.error || 'Error updating message status', 'error');
                }
            } catch (error) {
                console.error('Error updating message status:', error);
                showAlert('Error updating message status', 'error');
            }
        }

        function deleteMessage(messageId, senderName) {
            if (confirm(`Are you sure you want to delete the message from "${senderName}"? This action cannot be undone.`)) {
                fetch(`/admin/messages/${messageId}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showAlert(data.success, 'success');
                        // Remove the message card from DOM
                        const messageCard = document.querySelector(`[data-id="${messageId}"]`);
                        if (messageCard) {
                            messageCard.style.transition = 'all 0.3s ease';
                            messageCard.style.opacity = '0';
                            messageCard.style.transform = 'scale(0.8)';
                            setTimeout(() => {
                                messageCard.remove();
                                // Reload to update stats
                                setTimeout(() => window.location.reload(), 1000);
                            }, 300);
                        }
                    } else {
                        showAlert(data.error || 'Error deleting message', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error deleting message:', error);
                    showAlert('Error deleting message', 'error');
                });
            }
        }

        function showAlert(message, type) {
            // Remove existing alerts
            const existingAlerts = document.querySelectorAll('.alert');
            existingAlerts.forEach(alert => alert.remove());
            
            // Create new alert
            const alert = document.createElement('div');
            alert.className = `alert ${type}`;
            alert.textContent = message;
            
            // Insert after header
            const messagesContent = document.querySelector('.messages-content');
            messagesContent.insertBefore(alert, messagesContent.firstChild);
            
            // Auto-hide after 5 seconds
            setTimeout(() => {
                if (alert.parentNode) {
                    alert.style.opacity = '0';
                    alert.style.transform = 'translateY(-10px)';
                    setTimeout(() => alert.remove(), 300);
                }
            }, 5000);
        }

        // Close modals when clicking outside
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal')) {
                if (e.target.id === 'viewMessageModal') {
                    closeViewMessageModal();
                }
            }
        });

        // Close modals with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeViewMessageModal();
            }
        });

        // Sidebar toggle functionality
        const menuToggle = document.getElementById('menuToggle');
        const sidebar = document.getElementById('sidebar');
        const sidebarOverlay = document.getElementById('sidebarOverlay');

        menuToggle.addEventListener('click', function() {
            sidebar.classList.toggle('active');
            sidebarOverlay.classList.toggle('active');
        });

        sidebarOverlay.addEventListener('click', function() {
            sidebar.classList.remove('active');
            sidebarOverlay.classList.remove('active');
        });

        // Auto-hide alerts
        setTimeout(() => {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                if (alert) {
                    alert.style.opacity = '0';
                    alert.style.transform = 'translateY(-10px)';
                    setTimeout(() => alert.remove(), 300);
                }
            });
        }, 5000);
    </script>
</body>
</html>
